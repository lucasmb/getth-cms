
# Build the application
build:
	echo "Building..."
	@go build -o main cmd/main.go

# Run the application
dev:
	@air

# Update go dependencies in the docker image
update:
	@docker exec -it echoapi-go-1 go get -u ./... && go mod tidy

css:
	@npx tailwindcss -i ./assets/main.css -o ./assets/tailwind.css

# Clean the binary
clean:
	@echo "Cleaning..."
	@rm -f main

# Create DB container
docker-run:
	@if docker compose up --build >/dev/null; then \
		: ; \
	else \
		echo "Falling back to Docker Compose V1"; \
		docker compose up; \
	fi

# Shutdown DB container
docker-down:
	@if docker compose down >/dev/null; then \
		: ; \
	else \
		echo "Falling back to Docker Compose V1"; \
		docker-compose down; \
	fi
	
# Live Reload
watch:
	@if command -v air > /dev/null; then \
	    air; \
	    echo "Watching...";\
	else \
	    read -p "Go's 'air' is not installed on your machine. Do you want to install it? [Y/n] " choice; \
	    if [ "$$choice" != "n" ] && [ "$$choice" != "N" ]; then \
	        go install github.com/cosmtrek/air@latest; \
	        air; \
	        echo "Watching...";\
	    else \
	        echo "You chose not to install air. Exiting..."; \
	        exit 1; \
	    fi; \
	fi

build:
	tailwindcss -i public/css/styles.css -o public/styles.css
	@templ generate view
	@go build -o bin/fullstackgo main.go 

test:
	@go test -v ./...
	
run: build
	@./bin/fullstackgo

tailwind:
	@npx tailwindcss -i ./assets/main.css -o ./assets/tailwind.css --watch

templ:
	@templ generate -watch -proxy=http://localhost:8080

watch2:
	tailwind
	@air


.PHONY: all build dev run test clean docker-run docker-down watch migrate-up migrate-down migrate-status